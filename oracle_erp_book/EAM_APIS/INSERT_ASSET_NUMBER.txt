DECLARE
   X_RETURN_STATUS   VARCHAR2 (100);
   X_MSG_COUNT       NUMBER;
   X_MSG_DATA        VARCHAR2 (4000);
   X_OBJECT_ID       NUMBER;
BEGIN
   MO_GLOBAL.SET_POLICY_CONTEXT ('S', 81);
   FND_GLOBAL.APPS_INITIALIZE (USER_ID        => 2887,
                               RESP_ID        => 23118,
                               RESP_APPL_ID   => 426);


   EAM_ASSETNUMBER_PUB.INSERT_ASSET_NUMBER (
      P_API_VERSION                 => 1.0,
      P_VALIDATION_LEVEL            => FND_API.G_VALID_LEVEL_FULL,
      P_INIT_MSG_LIST               => 'F',
      P_COMMIT                      => 'F',
      P_CURRENT_ORGANIZATION_ID     => 292,
      P_OWNING_DEPARTMENT_ID        => 1,
      P_INVENTORY_ITEM_ID           => 329725,
      P_INSTANCE_NUMBER             => 'TEST-ASSET-002',
      P_SERIAL_NUMBER               => 'TEST-ASSET-002',
      P_CURRENT_STATUS              => 3,
      P_DESCRIPTIVE_TEXT            => 'TEST_DESCRIPTIVE_TEXT',
      P_ATTRIBUTE1                  => '1',
      P_MAINTAINABLE_FLAG           => 'Y',
      P_NETWORK_ASSET_FLAG          => 'N',
      p_instantiate_flag            => TRUE,
      P_ASSET_CRITICALITY_CODE      => '30',
      P_EAM_LOCATION_ID             => 346,
      P_WIP_ACCOUNTING_CLASS_CODE   => 'Generic',
      P_CATEGORY_ID                 => 30187,
      --P_ACTIVE_START_DATE         => SYSDATE,
      --P_ACTIVE_END_DATE           => SYSDATE,
      --P_LOCATION                  => 100371,
      --P_FA_ASSET_ID               => 0,
      --p_PROD_ORGANIZATION_ID      => 0,
      --p_EQUIPMENT_ITEM_ID         => 0,
      --p_EQP_SERIAL_NUMBER         => '0',
      X_RETURN_STATUS               => X_RETURN_STATUS,
      X_MSG_COUNT                   => X_MSG_COUNT,
      X_MSG_DATA                    => X_MSG_DATA,
      X_OBJECT_ID                   => X_OBJECT_ID);

   IF (X_RETURN_STATUS = 'S')
   THEN
      DBMS_OUTPUT.PUT_LINE ('Done!');
      DBMS_OUTPUT.PUT_LINE (
            'Error0 '
         || FND_MSG_PUB.GET (P_MSG_INDEX   => FND_MSG_PUB.G_LAST,
                             P_ENCODED     => FND_API.G_FALSE));
      COMMIT;
   ELSE
      DBMS_OUTPUT.PUT_LINE ('Error1 ' || X_MSG_DATA);
      DBMS_OUTPUT.PUT_LINE (
            'Error2 '
         || FND_MSG_PUB.GET (P_MSG_INDEX   => FND_MSG_PUB.G_LAST,
                             P_ENCODED     => FND_API.G_FALSE));
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.PUT_LINE ('Error: ' || SQLERRM);
END;