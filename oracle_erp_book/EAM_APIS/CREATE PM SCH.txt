DECLARE
   P_PM_SCHEDULE_REC               EAM_PMDef_Pub.PM_SCHEDULING_REC_TYPE;
   P_PM_ACTIVITIES_TBL             EAM_PMDef_Pub.PM_ACTIVITIES_GRP_TBL_TYPE;
   P_PM_DAY_INTERVAL_RULES_TBL     EAM_PMDef_Pub.PM_RULE_TBL_TYPE;
   P_PM_RUNTIME_RULES_TBL          EAM_PMDef_Pub.PM_RULE_TBL_TYPE;
   P_PM_LIST_DATE_RULES_TBL        EAM_PMDef_Pub.PM_RULE_TBL_TYPE;
   P_PM_CALENDAR_BASED_RULES_TBL   EAM_PMDef_Pub.PM_RULE_TBL_TYPE;
   X_RETURN_STATUS                 VARCHAR2 (100);
   X_MSG_COUNT                     NUMBER;
   X_MSG_DATA                      VARCHAR2 (4000);
   X_MESSAGE_LIST                  ERROR_HANDLER.ERROR_TBL_TYPE;
   X_NEW_PM_SCHEDULE_ID            NUMBER;
BEGIN
   MO_GLOBAL.SET_POLICY_CONTEXT ('S', 81);
   FND_GLOBAL.APPS_INITIALIZE (USER_ID        => 2826,
                               RESP_ID        => 23118,
                               RESP_APPL_ID   => 426);

   -- Header information --AG ID 230681  -- PU-L03-NOV-001
   P_PM_SCHEDULE_REC.NAME := 'Test Sch DR05';
   P_PM_SCHEDULE_REC.FROM_EFFECTIVE_DATE := SYSDATE;
   P_PM_SCHEDULE_REC.RESCHEDULING_POINT := 1;
   P_PM_SCHEDULE_REC.SET_NAME_ID := 1;
   P_PM_SCHEDULE_REC.SOURCE_CODE := 'EAM';
   P_PM_SCHEDULE_REC.SOURCE_LINE := '1';
   P_PM_SCHEDULE_REC.TYPE_CODE := 10;
   P_PM_SCHEDULE_REC.SCHEDULING_METHOD_CODE := 10;
   P_PM_SCHEDULE_REC.WHICHEVER_FIRST := 'Y';
   P_PM_SCHEDULE_REC.GENERATE_WO_STATUS := 1;
   P_PM_SCHEDULE_REC.GENERATE_NEXT_WORK_ORDER := 'N';
   P_PM_SCHEDULE_REC.MAINTENANCE_OBJECT_ID := 230688; -- inventory_item_id for asset_group, or instance_id for asset_number
   P_PM_SCHEDULE_REC.MAINTENANCE_OBJECT_TYPE := 2; -- 2=asset_group, 3=asset_number, 4=rebuildable_item
   P_PM_SCHEDULE_REC.NON_SCHEDULED_FLAG := 'N';
   P_PM_SCHEDULE_REC.INTERVAL_PER_CYCLE := 1;
   P_PM_SCHEDULE_REC.CURRENT_CYCLE := 1;
   P_PM_SCHEDULE_REC.CURRENT_SEQ := 0;
   P_PM_SCHEDULE_REC.AUTO_INSTANTIATION_FLAG := 'N';
   P_PM_SCHEDULE_REC.DAY_TOLERANCE := 3;
   P_PM_SCHEDULE_REC.TMPL_FLAG := 'Y';      -- Y=Schedule_Template, N=Schedule

   -- Rules information
   -- RULE_TYPE 1=date_rule, 2=meter_rule, 3=date_list, 4=calendar_rule
   P_PM_DAY_INTERVAL_RULES_TBL (1).RULE_TYPE := 1;
   P_PM_DAY_INTERVAL_RULES_TBL (1).DAY_INTERVAL := 10;
   P_PM_DAY_INTERVAL_RULES_TBL (1).EFFECTIVE_DATE_FROM := NULL;
   P_PM_DAY_INTERVAL_RULES_TBL (1).EFFECTIVE_DATE_TO := NULL;

   P_PM_RUNTIME_RULES_TBL (1).RULE_TYPE := 2;
   P_PM_RUNTIME_RULES_TBL (1).METER_ID := 66;
   P_PM_RUNTIME_RULES_TBL (1).RUNTIME_INTERVAL := 100;
   P_PM_RUNTIME_RULES_TBL (1).EFFECTIVE_DATE_FROM := NULL;
   P_PM_RUNTIME_RULES_TBL (1).EFFECTIVE_DATE_TO := NULL;

   -- Activity Template association
   -- ACTIVITY_ASSOCIATION_ID in table
   P_PM_ACTIVITIES_TBL (1).ACTIVITY_ASSOCIATION_ID := 12094;
   P_PM_ACTIVITIES_TBL (1).INTERVAL_MULTIPLE := 2;
   P_PM_ACTIVITIES_TBL (1).ALLOW_REPEAT_IN_CYCLE := 'Y';
   P_PM_ACTIVITIES_TBL (1).NEXT_SERVICE_START_DATE := NULL;
   P_PM_ACTIVITIES_TBL (1).NEXT_SERVICE_END_DATE := NULL;

   --   P_PM_ACTIVITIES_TBL (2).ACTIVITY_ASSOCIATION_ID := 14115;
   --   P_PM_ACTIVITIES_TBL (2).INTERVAL_MULTIPLE := 7;
   --   P_PM_ACTIVITIES_TBL (2).ALLOW_REPEAT_IN_CYCLE := 'Y';
   --   P_PM_ACTIVITIES_TBL (2).NEXT_SERVICE_START_DATE := NULL;
   --   P_PM_ACTIVITIES_TBL (2).NEXT_SERVICE_END_DATE := NULL;

ERROR_HANDLER.INITIALIZE;

   EAM_PMDEF_PUB.CREATE_PM_DEF (
      P_API_VERSION                   => 1.0,
      P_INIT_MSG_LIST                 => 'F',
      P_COMMIT                        => 'F',
      P_VALIDATION_LEVEL              => FND_API.G_VALID_LEVEL_FULL,
      P_PM_SCHEDULE_REC               => P_PM_SCHEDULE_REC,
      P_PM_ACTIVITIES_TBL             => P_PM_ACTIVITIES_TBL,
      P_PM_DAY_INTERVAL_RULES_TBL     => P_PM_DAY_INTERVAL_RULES_TBL,
      P_PM_RUNTIME_RULES_TBL          => P_PM_RUNTIME_RULES_TBL,
      P_PM_LIST_DATE_RULES_TBL        => P_PM_LIST_DATE_RULES_TBL,
      P_PM_CALENDAR_BASED_RULES_TBL   => P_PM_CALENDAR_BASED_RULES_TBL,
      X_NEW_PM_SCHEDULE_ID            => X_NEW_PM_SCHEDULE_ID,
      X_RETURN_STATUS                 => X_RETURN_STATUS,
      X_MSG_COUNT                     => X_MSG_COUNT,
      X_MSG_DATA                      => X_MSG_DATA);

   DBMS_OUTPUT.PUT_LINE ('X_NEW_PM_SCHEDULE_ID : ' || X_NEW_PM_SCHEDULE_ID);
   DBMS_OUTPUT.PUT_LINE ('X_RETURN_STATUS : ' || X_RETURN_STATUS);

   IF (X_RETURN_STATUS = 'S')
   THEN
      DBMS_OUTPUT.PUT_LINE ('Done!');
   ELSE
      DBMS_OUTPUT.PUT_LINE (
            'Error: '
         || FND_MSG_PUB.GET (P_MSG_INDEX   => FND_MSG_PUB.G_LAST,
                             P_ENCODED     => FND_API.G_FALSE));
      ERROR_HANDLER.GET_MESSAGE_LIST (X_MESSAGE_LIST);

      FOR I IN 1 .. X_MESSAGE_LIST.COUNT
      LOOP
         DBMS_OUTPUT.PUT_LINE (X_MESSAGE_LIST (I).MESSAGE_TEXT);
      END LOOP;
   END IF;

   COMMIT;
END;