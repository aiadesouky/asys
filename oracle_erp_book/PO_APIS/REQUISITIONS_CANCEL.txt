DECLARE
   X_RETURN_STATUS   VARCHAR2 (1000);
   X_MSG_COUNT       NUMBER;
   X_MSG_DATA        VARCHAR2 (1000);
   V_HEADER_ID       NUMBER;
   V_LINE_ID         NUMBER;
   X_MESSAGE_LIST    ERROR_HANDLER.ERROR_TBL_TYPE;
   X_ERROR           VARCHAR2 (1000);
   V_USER_ID         NUMBER := 2887;                    -- FND_GLOBAL.USER_ID;
   V_RESP_ID         NUMBER := 23118;                   -- FND_GLOBAL.RESP_ID;
   V_APPL_ID         NUMBER := 426;                -- FND_GLOBAL.RESP_APPL_ID;
BEGIN
   MO_GLOBAL.SET_POLICY_CONTEXT ('S', 81);
   FND_GLOBAL.APPS_INITIALIZE (USER_ID        => V_USER_ID,            --2887,
                               RESP_ID        => V_RESP_ID,           --23118,
                               RESP_APPL_ID   => V_APPL_ID);           --426);

   FOR Z IN (SELECT * FROM FRT_TEMP_INTERFACE)
   LOOP
      BEGIN
         ERROR_HANDLER.INITIALIZE;
         V_HEADER_ID := Z.C01;
         V_LINE_ID := Z.C02;
         
         PO_REQ_DOCUMENT_CANCEL_GRP.CANCEL_REQUISITION (
            P_API_VERSION     => 1.0,
            P_REQ_HEADER_ID   => V_HEADER_ID,
            P_REQ_LINE_ID     => V_LINE_ID,
            P_CANCEL_DATE     => SYSDATE,
            P_CANCEL_REASON   => 'Cancelled Requisition',
            P_SOURCE          => 'REQUISITION',
            X_RETURN_STATUS   => X_RETURN_STATUS,
            X_MSG_COUNT       => X_MSG_COUNT,
            X_MSG_DATA        => X_MSG_DATA);

         IF V_RETURN_STATUS = 'S'
         THEN
            DBMS_OUTPUT.PUT_LINE (V_LINE_ID || ' => ' || X_RETURN_STATUS);
         ELSE
            DBMS_OUTPUT.PUT_LINE (
               'ERROR: ' || V_LINE_ID || ' => ' || X_MSG_DATA);

            ERROR_HANDLER.GET_MESSAGE_LIST (X_MESSAGE_LIST => X_MESSAGE_LIST);

            FOR I IN 1 .. X_MESSAGE_LIST.COUNT
            LOOP
               DBMS_OUTPUT.PUT_LINE (
                  'ERROR' || I || ': ' || X_MESSAGE_LIST (I).MESSAGE_TEXT);
            END LOOP;
         END IF;

         COMMIT;
      EXCEPTION
         WHEN OTHERS
         THEN
            X_ERROR := SQLERRM;
            DBMS_OUTPUT.PUT_LINE ('SQLERR: ' || X_ERROR);
      END;
   END LOOP;
END;