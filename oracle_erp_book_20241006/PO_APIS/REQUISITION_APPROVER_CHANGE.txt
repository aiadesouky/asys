DECLARE
   X_MSG_DATA         VARCHAR2 (100);
   X_MSG_COUNT        NUMBER;
   X_RETURN_STATUS    VARCHAR2 (1);
   V_PERSON_TYPE      VARCHAR2 (20);
   V_OLD_PERSON_ID    NUMBER;
   V_NEW_PERSON_ID    NUMBER;
   V_VALID_EMPLOYEE   NUMBER;
   V_DOCUMENT_NO      VARCHAR2 (200);
BEGIN
   MO_GLOBAL.INIT ('PO');
   FND_CLIENT_INFO.SET_ORG_CONTEXT (81);
   MO_GLOBAL.SET_POLICY_CONTEXT ('S', 81);
   FND_GLOBAL.APPS_INITIALIZE (USER_ID        => 2887,
                               RESP_ID        => 23118,
                               RESP_APPL_ID   => 426);

   V_PERSON_TYPE := 'APPROVER';              ----PREPARER, APPROVER, REQUESTOR
   V_DOCUMENT_NO := '723';
   V_NEW_PERSON_ID := 308;

   IF V_PERSON_TYPE = 'APPROVER'
   THEN
      SELECT EMPLOYEE_ID
        INTO V_OLD_PERSON_ID
        FROM PO_ACTION_HISTORY
       WHERE     OBJECT_TYPE_CODE = 'REQUISITION'
             AND ACTION_CODE IS NULL
             AND OBJECT_ID = (SELECT REQUISITION_HEADER_ID
                                FROM PO_REQUISITION_HEADERS_ALL
                               WHERE SEGMENT1 = V_DOCUMENT_NO);
   ELSIF V_PERSON_TYPE = 'PREPARER'
   THEN
      SELECT PREPARER_ID
        INTO V_OLD_PERSON_ID
        FROM PO_REQUISITION_HEADERS_ALL
       WHERE SEGMENT1 = V_DOCUMENT_NO;
   ELSIF V_PERSON_TYPE = 'REQUESTOR'
   THEN
      SELECT PREPARER_ID
        INTO V_OLD_PERSON_ID
        FROM PO_REQUISITION_HEADERS_ALL
       WHERE SEGMENT1 = V_DOCUMENT_NO;
   END IF;

   SELECT COUNT (1)
     INTO V_VALID_EMPLOYEE
     FROM PER_ALL_PEOPLE_F
    WHERE PERSON_ID = V_NEW_PERSON_ID AND CURRENT_EMPLOYEE_FLAG = 'Y';

   IF V_OLD_PERSON_ID != V_NEW_PERSON_ID AND V_VALID_EMPLOYEE > 0
   THEN
      PO_MASS_UPDATE_REQ_GRP.UPDATE_PERSONS (
         P_UPDATE_PERSON      => V_PERSON_TYPE,
         P_OLD_PERSONID       => V_OLD_PERSON_ID,
         P_NEW_PERSONID       => V_NEW_PERSON_ID,
         P_DOCUMENT_TYPE      => 'PURCHASE',            ----INTERNAL, PURCHASE
         P_DOCUMENT_NO_FROM   => V_DOCUMENT_NO,
         P_DOCUMENT_NO_TO     => V_DOCUMENT_NO,
         P_DATE_FROM          => NULL,
         P_DATE_TO            => NULL,
         P_COMMIT_INTERVAL    => 1,
         P_MSG_DATA           => X_MSG_DATA,
         P_MSG_COUNT          => X_MSG_COUNT,
         P_RETURN_STATUS      => X_RETURN_STATUS);

      COMMIT;

      ----get error but action done successfully
      IF X_RETURN_STATUS = 'S'
      THEN
         DBMS_OUTPUT.PUT_LINE (
            'Done: ' || V_DOCUMENT_NO || ' => ' || X_RETURN_STATUS);
      ELSE
         DBMS_OUTPUT.PUT_LINE (
            'Error: ' || X_RETURN_STATUS || ' ' || X_MSG_DATA);
         DBMS_OUTPUT.PUT_LINE (
               'Error2: '
            || FND_MSG_PUB.GET (P_MSG_INDEX   => FND_MSG_PUB.G_LAST,
                                P_ENCODED     => FND_API.G_FALSE));
      END IF;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.PUT_LINE ('SQLError: ' || SQLERRM);
END;