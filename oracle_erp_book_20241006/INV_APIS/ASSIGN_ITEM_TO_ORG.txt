DECLARE
   X_RETURN_STATUS             VARCHAR2 (100);
   X_MSG_COUNT                 NUMBER;
   X_MESSAGE_LIST              ERROR_HANDLER.ERROR_TBL_TYPE;
   V_ITEM_ORG_ASSIGNMENT_TBL   EGO_ITEM_PUB.ITEM_ORG_ASSIGNMENT_TBL_TYPE;
BEGIN
   MO_GLOBAL.SET_POLICY_CONTEXT ('S', 81);
   FND_GLOBAL.APPS_INITIALIZE (USER_ID        => 2887,
                               RESP_ID        => 23118,
                               RESP_APPL_ID   => 426);

   FOR ITM IN (SELECT *
                 FROM FRT_SPAREPARTS_INTERFACE
                WHERE TEMP = 'NOREF')
   LOOP
      BEGIN
         V_ITEM_ORG_ASSIGNMENT_TBL (1).INVENTORY_ITEM_ID := ITM.ITEM_ID;
         --V_ITEM_ORG_ASSIGNMENT_TBL(1).Item_Number  :=  'TEST_AC';
         V_ITEM_ORG_ASSIGNMENT_TBL (1).ORGANIZATION_ID := ITM.ORG_ID;
         --V_ITEM_ORG_ASSIGNMENT_TBL(1).Organization_Code:='AEM';

         EGO_ITEM_PUB.PROCESS_ITEM_ORG_ASSIGNMENTS (
            P_API_VERSION               => 1.0,
            P_INIT_MSG_LIST             => 'T',
            P_COMMIT                    => 'F',
            P_ITEM_ORG_ASSIGNMENT_TBL   => V_ITEM_ORG_ASSIGNMENT_TBL,
            X_RETURN_STATUS             => X_RETURN_STATUS,
            X_MSG_COUNT                 => X_MSG_COUNT);

         DBMS_OUTPUT.PUT_LINE (
            'RESULT : ' || ITM.ITEM_CODE || ' => ' || X_RETURN_STATUS);

         IF (X_RETURN_STATUS = 'S')
         THEN
            UPDATE FRT_SPAREPARTS_INTERFACE
               SET RESULT = 'DONE1'
             WHERE ITEM_ID = ITM.ITEM_ID;

            DBMS_OUTPUT.PUT_LINE ('Done!');
         ELSE
            UPDATE FRT_SPAREPARTS_INTERFACE
               SET RESULT = 'NONE0'
             WHERE ITEM_ID = ITM.ITEM_ID;

            ERROR_HANDLER.GET_MESSAGE_LIST (X_MESSAGE_LIST);

            FOR I IN 1 .. X_MESSAGE_LIST.COUNT
            LOOP
               DBMS_OUTPUT.PUT_LINE (X_MESSAGE_LIST (I).MESSAGE_TEXT);
            END LOOP;
         END IF;

         COMMIT;
      EXCEPTION
         WHEN OTHERS
         THEN
            DBMS_OUTPUT.PUT_LINE ('SQLERRM! ' || SQLERRM);
            COMMIT;
      END;
   END LOOP;
END;