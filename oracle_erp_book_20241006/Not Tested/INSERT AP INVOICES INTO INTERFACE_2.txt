/* Formatted on 3/30/2023 2:06:35 PM (QP5 v5.256.13226.35538) */
PROCEDURE FUJ_CRT_TICK_APINVOICE (ERRBUF             OUT VARCHAR2,
                                  RETCODE            OUT VARCHAR2,
                                  P_PO_NUMBER            VARCHAR2,
                                  P_GL_DATE              VARCHAR2,
                                  P_PAYMENT_METHOD       VARCHAR2 --,AMOUNT NUMBER
                                                                 )
AS
   L_VENDOR_ID        NUMBER;
   L_VENDOR_SITE_ID   NUMBER;
   L_AMOUNT           NUMBER;
   V_REQUEST_ID       NUMBER;
   L_BOOLEAN          BOOLEAN;
   L_PHASE            VARCHAR2 (200);
   L_STATUS           VARCHAR2 (200);
   L_DEV_PHASE        VARCHAR2 (200);
   L_DEV_STATUS       VARCHAR2 (200);
   L_MESSAGE          VARCHAR2 (200);
BEGIN
   SELECT VENDOR_ID, VENDOR_SITE_ID, POL.UNIT_PRICE
     INTO L_VENDOR_ID, L_VENDOR_SITE_ID, L_AMOUNT
     FROM PO_HEADERS_ALL POH, PO_LINES_ALL POL
    WHERE SEGMENT1 = P_PO_NUMBER                                      --'3696'
                                AND POH.PO_HEADER_ID = POL.PO_HEADER_ID;

   INSERT INTO AP_INVOICES_INTERFACE (INVOICE_ID,
                                      INVOICE_NUM,
                                      VENDOR_ID,
                                      VENDOR_SITE_ID,
                                      INVOICE_AMOUNT,
                                      INVOICE_CURRENCY_CODE,
                                      INVOICE_DATE,
                                      DESCRIPTION,
                                      --PAY_GROUP_LOOKUP_CODE,
                                      SOURCE,
                                      ORG_ID,
                                      PO_NUMBER,
                                      PAYMENT_METHOD_CODE)
        VALUES (AP_INVOICES_INTERFACE_S.NEXTVAL,
                'TICK-' || AP_INVOICES_INTERFACE_S.CURRVAL,      --P_PO_NUMBER
                L_VENDOR_ID,
                L_VENDOR_SITE_ID,
                100,                                             --L_AMOUNT,--
                'AED',
                FND_CONC_DATE.STRING_TO_DATE (P_GL_DATE),
                'This Invoice is created for ticket',
                -- 'WUFS SUPPLIER',
                'MANUAL INVOICE ENTRY',
                102,
                P_PO_NUMBER,
                P_PAYMENT_METHOD);

   INSERT INTO AP_INVOICE_LINES_INTERFACE (INVOICE_ID,
                                           INVOICE_LINE_ID,
                                           LINE_NUMBER,
                                           LINE_TYPE_LOOKUP_CODE,
                                           AMOUNT,
                                           DIST_CODE_COMBINATION_ID)
        VALUES (AP_INVOICES_INTERFACE_S.CURRVAL,
                AP_INVOICE_LINES_INTERFACE_S.NEXTVAL,
                1,
                'ITEM',
                100,
                3362334);


   COMMIT;

   BEGIN
      MO_GLOBAL.INIT ('SQLAP');
      MO_GLOBAL.SET_POLICY_CONTEXT ('S', 102);
      FND_GLOBAL.APPS_INITIALIZE (2605,
                                  50579,
                                  200,
                                  0,
                                  0);
      FND_REQUEST.SET_ORG_ID (102);
      V_REQUEST_ID :=
         FND_REQUEST.SUBMIT_REQUEST (APPLICATION   => 'SQLAP',
                                     PROGRAM       => 'APXIIMPT',
                                     DESCRIPTION   => '',
                                     START_TIME    => NULL,
                                     SUB_REQUEST   => FALSE,
                                     ARGUMENT1     => 102,
                                     ARGUMENT2     => 'MANUAL INVOICE ENTRY',
                                     ARGUMENT3     => NULL,
                                     ARGUMENT4     => NULL,
                                     ARGUMENT5     => NULL,
                                     ARGUMENT6     => NULL,
                                     ARGUMENT7     => NULL,
                                     ARGUMENT8     => 'N',
                                     ARGUMENT9     => 'Y');
      COMMIT;

      IF V_REQUEST_ID > 0
      THEN
         L_BOOLEAN :=
            FND_CONCURRENT.WAIT_FOR_REQUEST (V_REQUEST_ID --request_id IN number default NULL,
                                                         ,
                                             20 --Interval   IN number default 60, SECONDS
                                               ,
                                             0 --max_wait   IN number default 0,
                                              ,
                                             L_PHASE --phase      OUT varchar2,
                                                    ,
                                             L_STATUS --status     OUT varchar2,
                                                     ,
                                             L_DEV_PHASE --dev_phase  OUT varchar2,
                                                        ,
                                             L_DEV_STATUS --dev_status OUT varchar2,,
                                                         ,
                                             L_MESSAGE --message    OUT varchar2) return boolean
                                                      );
      END IF;

      FND_FILE.PUT_LINE (
         FND_FILE.LOG,
            'Please see the output of Payables OPEN Invoice Import program request id :'
         || V_REQUEST_ID);
      DBMS_OUTPUT.PUT_LINE ('success');
   EXCEPTION
      WHEN OTHERS
      THEN
         FND_FILE.PUT_LINE (FND_FILE.LOG, 'Error :' || SQLERRM);
         DBMS_OUTPUT.PUT_LINE ('Error :' || SQLERRM);
   END;

   FND_FILE.PUT_LINE (FND_FILE.LOG, 'SUCCESS');
EXCEPTION
   WHEN OTHERS
   THEN
      FND_FILE.PUT_LINE (FND_FILE.LOG, 'Error :' || SQLERRM);
      DBMS_OUTPUT.PUT_LINE ('Error :' || SQLERRM);
END;


---------Validating the AP invoice from backend by submitting concurrent program.

DECLARE
   V_REQUEST_ID   NUMBER;
BEGIN
   MO_GLOBAL.INIT ('SQLAP');
   MO_GLOBAL.SET_POLICY_CONTEXT ('S', 443);
   FND_GLOBAL.APPS_INITIALIZE (26015,
                               524410,
                               200,
                               0,
                               0);
   FND_REQUEST.SET_ORG_ID (443);
   V_REQUEST_ID :=
      FND_REQUEST.SUBMIT_REQUEST (
         APPLICATION   => 'SQLAP',
         PROGRAM       => 'APPRVL',
         DESCRIPTION   => '',
         START_TIME    => NULL,
         SUB_REQUEST   => FALSE,
         ARGUMENT1     => 443,
         ARGUMENT2     => 'All',
         ARGUMENT3     => NULL,
         ARGUMENT4     => TO_CHAR (SYSDATE, 'YYYY-MM-DD'),
         ARGUMENT5     => TO_CHAR (SYSDATE, 'YYYY-MM-DD'),
         ARGUMENT6     => NULL,
         ARGUMENT7     => NULL,
         ARGUMENT8     => NULL,         --or pass invoice id here remove dates
         ARGUMENT9     => NULL,
         ARGUMENT10    => 'N',
         ARGUMENT11    => 1000);
   COMMIT;
   DBMS_OUTPUT.PUT_LINE (V_REQUEST_ID);
END;


--checking invoice ap approval status --

BEGIN
   APPS.AP_INVOICES_PKG.GET_APPROVAL_STATUS (P_INVOICE_ID,
                                             NULL,
                                             NULL,
                                             NULL);
END;
--To approve AP Invoice from backend

PROCEDURE XXAP_INV_AUTO_APPROVAL (P_INVOICE_ID IN NUMBER)
IS
   V_HIST_ID                 NUMBER;
   V_USER_ID                 NUMBER;
   V_LOGIN_ID                NUMBER;
   V_USER_NAME               VARCHAR2 (150) := 'SYSTEM-USER';
   V_VALIDATION_STATUS       VARCHAR2 (50);
   V_STOP_APPROVAL_RESULT    BOOLEAN;
   V_HIST_REC                AP_INV_APRVL_HIST_ALL%ROWTYPE;
   V_ORG_ID                  AP_INVOICES_ALL.ORG_ID%TYPE;
   V_INVOICE_AMOUNT          AP_INVOICES_ALL.INVOICE_AMOUNT%TYPE;
   V_VALIDATION_REQUEST_ID   AP_INVOICES_ALL.VALIDATION_REQUEST_ID%TYPE;
   V_WFAPPROVAL_STATUS       AP_INVOICES_ALL.WFAPPROVAL_STATUS%TYPE;
BEGIN
   BEGIN
      SELECT ORG_ID, INVOICE_AMOUNT, WFAPPROVAL_STATUS
        INTO V_ORG_ID, V_INVOICE_AMOUNT, V_WFAPPROVAL_STATUS
        FROM AP_INVOICES_ALL
       WHERE INVOICE_ID = P_INVOICE_ID;

      SELECT USER_ID
        INTO V_USER_ID
        FROM FND_USER
       WHERE USER_NAME = V_USER_NAME;
   EXCEPTION
      WHEN OTHERS
      THEN
         FND_FILE.PUT_LINE (FND_FILE.LOG,
                            'Exception in first block-' || SQLERRM);
         DBMS_OUTPUT.PUT_LINE ('Exception in first block-' || SQLERRM);
   END;

   BEGIN
      V_VALIDATION_STATUS :=
         APPS.AP_INVOICES_PKG.GET_APPROVAL_STATUS (P_INVOICE_ID,
                                                   NULL,
                                                   NULL,
                                                   NULL);
   EXCEPTION
      WHEN OTHERS
      THEN
         FND_FILE.PUT_LINE (
            FND_FILE.LOG,
            'Exception retrieving invoice validation status-' || SQLERRM);
         DBMS_OUTPUT.PUT_LINE (
            'Exception retrieving invoice validation status-' || SQLERRM);
   END;

   IF (UPPER (V_VALIDATION_STATUS) <> 'APPROVED')
   THEN
      FND_FILE.PUT_LINE (FND_FILE.LOG, 'Invoice is not validated');
      DBMS_OUTPUT.PUT_LINE ('Invoice is not validated');
   ELSE
      /*set values for manual approval*/
      IF (V_WFAPPROVAL_STATUS = 'INITIATED')
      THEN
         V_STOP_APPROVAL_RESULT :=
            AP_WORKFLOW_PKG.STOP_APPROVAL (
               P_INVOICE_ID,
               NULL,
               'INV_SUM_ACTIONS_WFAPPROVE.do_force_approval');

         --Bug5527190
         IF V_STOP_APPROVAL_RESULT = TRUE
         THEN
            FND_FILE.PUT_LINE (
               FND_FILE.LOG,
               'Invoice approval workflow is forcibly stopped');
            DBMS_OUTPUT.PUT_LINE (
               'Invoice approval workflow is forcibly stopped');
         END IF;
      END IF;

      UPDATE AP_INVOICES_ALL
         SET WFAPPROVAL_STATUS = 'MANUALLY APPROVED'
       WHERE INVOICE_ID = P_INVOICE_ID;

      UPDATE AP_INVOICE_LINES_ALL
         SET WFAPPROVAL_STATUS = 'MANUALLY APPROVED'
       WHERE INVOICE_ID = P_INVOICE_ID;

      --insert into the history table
      V_HIST_REC.HISTORY_TYPE := 'DOCUMENTAPPROVAL';
      V_HIST_REC.INVOICE_ID := P_INVOICE_ID;
      V_HIST_REC.ITERATION := 0;
      V_HIST_REC.ORG_ID := V_ORG_ID;
      V_HIST_REC.APPROVER_NAME := V_USER_NAME;
      V_HIST_REC.AMOUNT_APPROVED := V_INVOICE_AMOUNT;
      V_HIST_REC.CREATED_BY := V_USER_ID;
      V_HIST_REC.LAST_UPDATED_BY := V_USER_ID;
      V_HIST_REC.LAST_UPDATE_LOGIN := -1;
      V_HIST_REC.CREATION_DATE := SYSDATE;
      V_HIST_REC.LAST_UPDATE_DATE := SYSDATE;
      V_HIST_REC.RESPONSE := 'MANUALLY APPROVED';
      V_HIST_REC.APPROVER_COMMENTS := 'System Auto Approved';
      AP_WORKFLOW_PKG.INSERT_HISTORY_TABLE (V_HIST_REC);
      COMMIT;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      FND_FILE.PUT_LINE (FND_FILE.LOG,
                         'Exception in auto approval main block-' || SQLERRM);
      DBMS_OUTPUT.PUT_LINE (
         'Exception in auto approval main block-' || SQLERRM);
END XXAP_INV_AUTO_APPROVAL;