--ACCESS DATABASE OBJECTS OVER REST API USING ORDS SERVER
--=========================================================

CREATE USER MYDB IDENTIFIED BY MYDB;
/
GRANT CREATE SESSION ,CREATE TABLE TO MYDB;
/
CREATE TABLE MYDB.USERS(USER_ID NUMBER, USER_NAME VARCHAR2(100),JOB_ID NUMBER);
/
CREATE TABLE MYDB.JOBS(JOB_ID NUMBER, JOB_NAME VARCHAR2(100));
/
CREATE OR REPLACE PROCEDURE SET_JOB (P_USER_ID NUMBER, P_JOB_ID NUMBER) AS
BEGIN
  UPDATE USERS SET JOB_ID = P_JOB_ID WHERE USER_ID = P_USER_ID;
  COMMIT;
  APEX_JSON.OPEN_OBJECT;
  APEX_JSON.WRITE('result','success, set new job');
  APEX_JSON.WRITE('user',P_USER_ID);
  APEX_JSON.WRITE('job',P_JOB_ID);
  APEX_JSON.CLOSE_OBJECT;
END;
/
--===================================================
--===================================================
#ords config set restEnabledSql.active true (ords 22.1+)
#java -jar ords.war set-property restEnabledSql.active true

#ords config set security.verifySSL false
#ords config set misc.pagination.maxRows 1000

--===================================================
BEGIN
  ORDS.ENABLE_SCHEMA(P_ENABLED => TRUE,
  P_SCHEMA => 'MYDB',
  P_URL_MAPPING_TYPE => 'BASE_PATH',
  P_URL_MAPPING_PATTERN => 'hr',
  P_AUTO_REST_AUTH => FALSE);
  COMMIT;
END;
/
BEGIN
  ORDS.ENABLE_OBJECT(P_ENABLED => TRUE,
  P_SCHEMA => 'MYDB',
  P_OBJECT => 'USERS',
  P_OBJECT_TYPE => 'TABLE',
  P_OBJECT_ALIAS => 'users');
  COMMIT;
END;
/
BEGIN
  ORDS.DEFINE_SERVICE(
    P_MODULE_NAME    => 'm1',
    P_BASE_PATH      => '/m1/',
    P_PATTERN        => 'userjob/',
    P_METHOD         => 'GET',
    P_SOURCE_TYPE    => ORDS.SOURCE_TYPE_COLLECTION_FEED,
    P_SOURCE         => 'SELECT U.USER_NAME,J.JOB_NAME FROM USERS U,JOBS J WHERE U.JOB_ID = J.JOB_ID',
    P_ITEMS_PER_PAGE => 0);
  COMMIT;
END;
/
BEGIN
  ORDS.DEFINE_MODULE(
  P_Module_Name    => 'm1',
  P_BASE_PATH      => '/m1/',
  P_ITEMS_PER_PAGE => 25);
  
  COMMIT;
END;
/
BEGIN
  ORDS.DEFINE_TEMPLATE(P_MODULE_NAME=>'m1',
  P_PATTERN => 'userjob/');
  
  ORDS.DEFINE_HANDLER(P_MODULE_NAME=>'m1',
  P_PATTERN=>'userjob/',
  P_METHOD=>'GET',
  P_SOURCE_TYPE=>ORDS.SOURCE_TYPE_COLLECTION_FEED,
  P_SOURCE=>'SELECT U.USER_NAME,J.JOB_NAME FROM USERS U,JOBS J WHERE U.JOB_ID = J.JOB_ID',
  P_ITEMS_PER_PAGE=>0);
  
  COMMIT;
END;
/
BEGIN
  ORDS.DEFINE_TEMPLATE(P_MODULE_NAME=>'m1',
  P_PATTERN => 'getjob/:userid');
  
  ORDS.DEFINE_HANDLER(P_MODULE_NAME=>'m1',
  P_PATTERN=>'getjob/:userid',
  P_METHOD=>'GET',
  P_SOURCE_TYPE=>ORDS.SOURCE_TYPE_COLLECTION_ITEM,
  P_SOURCE=>'SELECT J.JOB_NAME FROM USERS U,JOBS J WHERE U.JOB_ID = J.JOB_ID AND U.USER_ID = :userid',
  P_ITEMS_PER_PAGE=>0);
  
  COMMIT;
END;
/
BEGIN
  ORDS.DEFINE_TEMPLATE(P_MODULE_NAME=>'m1',
  P_PATTERN => 'setjob/:userid');
  
  ORDS.DEFINE_HANDLER(P_MODULE_NAME=>'m1',
  P_PATTERN=>'setjob/:userid',
  P_METHOD=>'PUT',
  P_SOURCE_TYPE=>ORDS.SOURCE_TYPE_PLSQL,
  P_SOURCE=>'BEGIN SET_JOB(P_USER_ID=>:userid,P_JOB_ID=>:jobid); END;',
  P_ITEMS_PER_PAGE=>0);
  
  COMMIT;
END;
/
SELECT * FROM USER_ORDS_SCHEMAS;
SELECT * FROM USER_ORDS_OBJECTS;
SELECT * FROM USER_ORDS_MODULES;
SELECT * FROM USER_ORDS_TEMPLATES;
SELECT * FROM USER_ORDS_HANDLERS;
SELECT * FROM USER_ORDS_SERVICES;
/
BEGIN
  ORDS.ENABLE_SCHEMA(
    P_ENABLED => FALSE,
    P_SCHEMA  => 'MYDB'
  );
END;
/
BEGIN
  ORDS.ENABLE_OBJECT(P_ENABLED => FALSE,
  P_SCHEMA => 'MYDB',
  P_OBJECT => 'USERS',
  P_OBJECT_TYPE => 'TABLE',
  P_OBJECT_ALIAS => 'users');
  COMMIT;
END;
/
BEGIN
  ORDS_SERVICES.DELETE_MODULE(P_ID => 1);
END;
/
BEGIN
  ORDS_SERVICES.DELETE_TEMPLATE(P_ID => 1);
END;
/
BEGIN
  ORDS_SERVICES.DELETE_HANDLER(P_ID => 1);
END;
/
--ACCESS DATABASE OBJECTS OVER REST API WITH ORDS SERVER
--GET ALL USERS [GET]
--http://<host>:<port>/ords/hr/users/
--GET USER BY ID [GET]
--http://<host>:<port>/ords/hr/users/{id}
--CREATE NEW USER [POST]
--http://<host>:<port>/ords/hr/users/
--{"user_id":100,"user_name":"user1","job_id":1}
--UPDATE USER [PUT]
--http://<host>:<port>/ords/hr/users/{id}
--{"user_id":100,"user_name":"user1","job_id":1}
--DELETE USER [DELETE]
--http://<host>:<port>/ords/hr/users/{id}
