git commands
============
# git --version		display version
# git init			initiate git in th current directory

# git config [--local,--global,--system] user.name <name>		configure git
# git config [--local,--global,--system] user.email <email>		configure git
# git config --list			list configuration values
# git config --get<key>		list configuration values
# git config --global alias.gc commit		create an alias for commands
# git config --global alias.ga add			create an alias for commands

# git status -s										view changes in the local repository
# git ls-files										list files or directories
# git add <[.,*.txt,file_or_dir]>					add files or directories to stage
# git commit -m "[Commit message]"					save snapshot of the staged changes
# git add -am "[Commit message]"					staging changes and commit it with message
# git rm <[.,*.txt,file_or_dir]>					remove files or directories from stage
# git mv <old_name> <new_name>						rename files or directories
# git restore <[.,*.txt,file_or_dir]>				restore lost files or directories
# git restore --staged <[.,*.txt,file_or_dir]>		restore files or directories from staged area
# git commit --amend -m "[New commit message]"		edit the latest commit

# git remote -v										list conneted repositories
# git remote add <con_name> https://github.com/<user_name/repo_name.get>				create connection to repositories
# git remote add <con_name> https://<token>@github.com/<user_name/repo_name.git>		create connection to repositories with access token
# git remote set-url <con_name> https://<token>@github.com/<user_name/repo_name.git> 	set access remote repo to access token
# git remote rm <con_name>							remove repositories connection
# git remote rename <old_name> <new_name>			rename repositories connection names
# git remote add <con_name> <user:pass>@github.com/<user_name/repo_name.git>
git remote add aiws3 aiadesouky:Twin@181084@github.com/aiadesouky/asys.git

# git clone <repo>									get clone from remote repositoris
# git clone -branch <branch> <repo>					get clone from remote repositoris
# git clone -branch <branch> <repo> <local_dir>		get clone from remote repositoris
# git clone -branch <branch> <user:pass@user_name/repo_name> <local_dir>		get clone from remote repositoris

# git push <repo_name> [<branch>]					push files and directories to remote repository
# git push --set-upstream origin <repo_name> [<branch>]		push files and directories to new branch in remote repository
# git fetch <repo_name> [<branch>]					fetch files and directories from remote repository
# git pull <repo_name> [<branch>]					pull files and directories from remote repository

# git branch -l							list branches
# git checkout <branch>					switch between branchs
# git checkout -b <branch>				create branch
# git merge <branch>					merge sub branch to main branch
# git branch --delete <branch>			delete branch
# git push origin --delete <branch>		delete remote branch
